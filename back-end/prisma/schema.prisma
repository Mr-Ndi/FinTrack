generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int       @id @default(autoincrement())
  username String    @unique
  email    String    @unique
  password String
  accounts Account[]
  budgets  Budget[]
}

model Account {
  id          Int    @id @default(autoincrement())
  userId      Int
  accountType String
  balance     Float  @default(0)

  transactions Transaction[]

  user    User     @relation(fields: [userId], references: [id])
  budgets Budget[]
}

model Transaction {
  id              Int      @id @default(autoincrement())
  accountId       Int
  amount          Float
  transactionDate DateTime @default(now())

  description String?

  account  Account    @relation(fields: [accountId], references: [id])
  category Category[]
}

model Category {
  id           Int           @id @default(autoincrement())
  name         String        @unique
  parentId     Int?
  parent       Category?     @relation("CategoryHierarchy", fields: [parentId], references: [id])
  children     Category[]    @relation("CategoryHierarchy")
  transactions Transaction[]
  Budget       Budget[]
}

model Budget {
  id          Int     @id @default(autoincrement())
  userId      Int
  accountId   Int?    // Optional: Link budget to a specific account
  accountType String? // Optional: Link budget to account type (MobileMoney, BankAccount, etc.)
  categoryId  Int
  amount      Float

  user     User     @relation(fields: [userId], references: [id])
  account  Account? @relation(fields: [accountId], references: [id]) // Optional relation to Account
  category Category @relation(fields: [categoryId], references: [id])
}
